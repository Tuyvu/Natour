
<head>
    <link rel="stylesheet" href="~/css/weather.css">
</head>
<div class="weatherapp">
    <div class="header">
        <div>
            <input type="text" name="" id="input" placeholder="Enter city name">
            <button id="search" onclick="searchByCity()">Search</button></input>
        </div>
    </div>

    <div class="mainwrather">
        <div class="weather">
            <h2 id="city">HaNoi, VN</h2>
            <div class="temp-box">
                <img src="~/images/weathericon.png" alt="" id="img">
                <p id="temperature">26 °C</p>
            </div>
            <span id="clouds">Broken Clouds</span>
        </div>
        <div class="divider1"></div>

        <div class="forecstH">
            <p class="cast-header">Upcoming forecast</p>
            <div class="templist">

                <div class="next">
                    <div>
                        <p class="time">8:30 PM</p>
                        <p>29 °C / 29 °C</p>
                    </div>
                    <p class="desc">Light Rain</p>
                </div>

                <div class="next">
                    <div>
                        <p class="time">8:30 PM</p>
                        <p>29 °C / 29 °C</p>
                    </div>
                    <p class="desc">Light Rain</p>
                </div>

                <div class="next">
                    <div>
                        <p class="time">8:30 PM</p>
                        <p>29 °C / 29 °C</p>
                    </div>
                    <p class="desc">Light Rain</p>
                </div>

                <div class="next">
                    <div>
                        <p class="time">8:30 PM</p>
                        <p>29 °C / 29 °C</p>
                    </div>
                    <p class="desc">Light Rain</p>
                </div>

                <div class="next">
                    <div>
                        <p class="time">8:30 PM</p>
                        <p>29 °C / 29 °C</p>
                    </div>
                    <p class="desc">Light Rain</p>
                </div>

            </div>
        </div>
    </div>

    <div class="forecstD">
        <div class="divider2"></div>
        <p class="cast-header"> Next 4 days forecast</p>
        <div class="weekF">

            <div class="dayF">
                <p class="date">Sun Jul 03 2022</p>
                <p>31 °C / 31 °C</p>
                <p class="desc">Overcast Clouds</p>
            </div>

            <div class="dayF">
                <p class="date">Sun Jul 03 2022</p>
                <p>31 °C / 31 °C</p>
                <p class="desc">Overcast Clouds</p>
            </div>

            <div class="dayF">
                <p class="date">Sun Jul 03 2022</p>
                <p>31 °C / 31 °C</p>
                <p class="desc">Overcast Clouds</p>
            </div>

            <div class="dayF">
                <p class="date">Sun Jul 03 2022</p>
                <p>31 °C / 31 °C</p>
                <p class="desc">Overcast Clouds</p>
            </div>
        </div>
    </div>
</div>


<script>
    const apikey = "498640fc16f7d7b522b206c4fca45661";
    window.addEventListener("load", () => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                let lon = position.coords.longitude;
                let lat = position.coords.latitude;
                const url = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&` + `lon=${lon}&appid=${apikey}`;
                fetch(url).then((res) => {
                    return res.json();
                }).then((data) => {
                    var dat = new Date(data.dt)
                    weatherReport(data);
                })
            })
        }
    })

    function searchByCity() {
        var place = document.getElementById('input').value;
        var urlsearch = `http://api.openweathermap.org/data/2.5/weather?q=${place}&` + `appid=${apikey}`;
        fetch(urlsearch).then((res) => {
            return res.json();
        }).then((data) => {
            weatherReport(data);
        })
        document.getElementById('input').value = '';
    }

    function weatherReport(data) {

        var urlcast = `http://api.openweathermap.org/data/2.5/forecast?q=${data.name}&` + `appid=${apikey}`;

        fetch(urlcast).then((res) => {
            return res.json();
        }).then((forecast) => {
            hourForecast(forecast);
            dayForecast(forecast)
            let temp = Math.floor(data.main.temp - 273)
            if (temp > 25) {
                document.body.classList.add('hot');
            } else if (temp < 15) {
                document.body.classList.remove('hot');

                document.body.classList.remove('cold');


            } else {
                document.body.classList.remove('hot');
                document.body.classList.remove('cold');
                document.body.classList.add('warm');
            }
            document.getElementById('city').innerText = data.name + ', ' + data.sys.country;

            document.getElementById('temperature').innerText = Math.floor(data.main.temp - 273) + ' °C';

            document.getElementById('clouds').innerText = data.weather[0].description;

            let icon1 = data.weather[0].icon;
            let iconurl = "http://api.openweathermap.org/img/w/" + icon1 + ".png";
            document.getElementById('img').src = iconurl
        })

    }

    function hourForecast(forecast) {
        document.querySelector('.templist').innerHTML = ''
        for (let i = 0; i < 5; i++) {

            var date = new Date(forecast.list[i].dt * 1000)

            let hourR = document.createElement('div');
            hourR.setAttribute('class', 'next');

            let div = document.createElement('div');
            let time = document.createElement('p');
            time.setAttribute('class', 'time')
            time.innerText = (date.toLocaleTimeString(undefined, 'Asia/HaNoi')).replace(':00', '');

            let temp = document.createElement('p');
            temp.innerText = Math.floor((forecast.list[i].main.temp_max - 273)) + ' °C' + ' / ' + Math.floor((forecast.list[i].main.temp_min - 273)) + ' °C';

            div.appendChild(time)
            div.appendChild(temp)

            let desc = document.createElement('p');
            desc.setAttribute('class', 'desc')
            desc.innerText = forecast.list[i].weather[0].description;

            hourR.appendChild(div);
            hourR.appendChild(desc)
            document.querySelector('.templist').appendChild(hourR);
        }
    }

    function dayForecast(forecast) {
        document.querySelector('.weekF').innerHTML = ''
        for (let i = 8; i < forecast.list.length; i += 8) {
            let div = document.createElement('div');
            div.setAttribute('class', 'dayF');

            let day = document.createElement('p');
            day.setAttribute('class', 'date')
            day.innerText = new Date(forecast.list[i].dt * 1000).toDateString(undefined, 'Asia/HaNoi');
            div.appendChild(day);

            let temp = document.createElement('p');
            temp.innerText = Math.floor((forecast.list[i].main.temp_max - 273)) + ' °C' + ' / ' + Math.floor((forecast.list[i].main.temp_min - 273)) + ' °C';
            div.appendChild(temp)

            let description = document.createElement('p');
            description.setAttribute('class', 'desc')
            description.innerText = forecast.list[i].weather[0].description;
            div.appendChild(description);

            document.querySelector('.weekF').appendChild(div)
        }
    }

</script>